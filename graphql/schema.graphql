"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "Filters by username. Accepts SQL LIKE wildcards `%` and `_`."
    users(
      username: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)


    media(
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
    ): Media @find
}

"Account of a person who utilizes this application."
type User {
    id: ID!
    username: String!
    email: String!
    email_verified_at: DateTime!
    created_at: DateTime!
    updated_at: DateTime!
    role: Role! @hasOne
}

type Media {
    id: ID!
    title: String!
    duration: Int!
    is_video: Boolean!
    image: String!
    source: String!
    album: Album! @belongsTo
    artists: [Artist!]! @belongsToMany
}

type Album {
    id: ID!
    title: String!
    summary: String!
    image: String!
    artists: [Artist!]! @hasMany
    media: [Media!]! @hasMany
}

type Artist {
    id: ID!
    name: String!
    summary: String!
    image: String!
    albums: [Album!]! @belongsToMany
    media: [Media!]! @belongsToMany
}

type Request {
    id: ID!
    media: Media! @belongsTo
    users: [User!]! @belongsToMany
    requested_at: DateTime!
    played_at: DateTime!
}

type Role {
    id: ID!
    name: String!
    description: String!
    protected: Boolean!
    permissions: [Permission!]! @hasMany
}

type Permission {
    id: ID!
    name: String!
    description: String!
}

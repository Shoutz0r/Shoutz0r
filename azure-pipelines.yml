trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  phpVersion: 8

resources:
  repositories:
    - repository: Shoutz0r
      type: github
      endpoint: github.com_xorinzor
      name: xorinzor/Shoutz0r

stages:

  - stage: unitTest
    jobs:
      - job: 'PHPUnit_Shoutz0rApp'
        displayName: 'Run PHPUnit for Shoutz0r-app'
        steps:
          - checkout: self
            persistCredentials: true
            clean: true

          - script: |
              cd ./Shoutz0r-app
              cp .env.template .env
            displayName: 'Environment Setup'

          - task: DockerCompose@0
            displayName: 'Start MySQL container in background'
            inputs:
              action: Run a Docker Compose command
              dockerComposeFile: docker-compose.yml
              additionalDockerComposeFiles: docker-compose.test.yml
              projectName: shoutzor
              dockerComposeCommand: up -d mysql

          - script: |
              sudo composer self-update
              composer install --no-interaction --prefer-dist --no-suggest
              composer --version
            displayName: 'Install Composer Packages'

          - script: |
              npm install
            displayName: 'Install NPM Packages'

          - script: |
              npm run production
            displayName: 'Build resource files with NPM & Webpack'

          - task: DockerCompose@0
            displayName: 'Run Shoutzor CLI Installer'
            inputs:
              action: Run a Docker Compose command
              dockerComposeFile: docker-compose.yml
              additionalDockerComposeFiles: docker-compose.test.yml
              projectName: shoutzor
              dockerComposeCommand: run php php /code/artisan shoutzor:install --useenv

          - script: |
              cp .env .env.testing
            displayName: 'Create testing .env file'

          - task: DockerCompose@0
            displayName: 'Rebuild config cache'
            inputs:
              action: Run a Docker Compose command
              dockerComposeFile: docker-compose.yml
              additionalDockerComposeFiles: docker-compose.test.yml
              projectName: shoutzor
              dockerComposeCommand: run php php /code/artisan config:cache

          - task: DockerCompose@0
            displayName: 'Run PHPUnit'
            inputs:
              action: Run a Docker Compose command
              dockerComposeFile: docker-compose.yml
              additionalDockerComposeFiles: docker-compose.test.yml
              projectName: shoutzor
              dockerComposeCommand: run phpunit

        #  - script: |
        #      php artisan key:generate --force
        #      php artisan passport:install --force
        #      php artisan migrate:fresh --force
        #      php artisan db:seed --force
        #    displayName: 'Running Migrations'

        #  - script: |
        #      vendor/bin/phpunit --log-junit tests/Results/TEST-phpunit-junit.xml
        #    displayName: 'Running Unit Tests'

        # Publish Test Results to Azure Pipelines/TFS
        #  - task: PublishTestResults@2
        #    inputs:
        #      testRunner: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit
        #      testResultsFiles: '**/TEST-*.xml'
        #      searchFolder: '$(System.DefaultWorkingDirectory)/tests/Results' # Optional
        #      mergeTestResults: false # Optional
        #      #testRunTitle: # Optional
        #      #buildPlatform: # Optional
        #      #buildConfiguration: # Optional
        #      #publishRunAttachments: true # Optional
        #    condition: always()

  - stage: generateDocs
    jobs:
      - job: 'prepare_Shoutz0rApp'
        displayName: 'Install Shoutz0r-app requirements'
        steps:
          - checkout: self
            persistCredentials: true
            clean: true
          - checkout: Shoutz0r
            persistCredentials: true

          - script: |
              git config --global user.email "4212335+xorinzor@users.noreply.github.com"
              git config --global user.name "xorinzor"
            displayName: 'Configure GIT'

          - script: |
              sudo update-alternatives --set php /usr/bin/php$(phpVersion)
              sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
              sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
              sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
              sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
              php -version
            displayName: 'Use PHP version $(phpVersion)'

      - job: 'updateDocs_Shoutz0rApp'
        displayName: 'Update Shoutz0r-app PHPDoc'
        steps:
          - checkout: self
            persistCredentials: true
            clean: true
          - checkout: Shoutz0r
            persistCredentials: true

          - script: |
              wget https://phpdoc.org/phpDocumentor.phar
              php phpDocumentor.phar -d ./Shoutz0r-app/app -t ./Shoutz0r-app/docs
            displayName: 'Generate phpDoc for Shoutz0r-app'

      - job: 'updateStorybook_Shoutz0rApp'
        displayName: 'Update Shoutz0r-app Storybook'
        steps:
          - checkout: self
            persistCredentials: true
            clean: true
          - checkout: Shoutz0r
            persistCredentials: true

          - script: |
              npm run build-storybook
            displayName: 'Generate Storybook for Shoutz0r-app'

      - job: 'uploadDocs_Shoutz0rApp'
        displayName: 'Upload generated Shoutz0r-app docs'
        steps:
          - checkout: self
            persistCredentials: true
            clean: true
          - checkout: Shoutz0r
            persistCredentials: true

          - script: |
              cd ./Shoutz0r
              git switch master
            displayName: 'Prepare Shoutz0r repo'

          - script: |
              mkdir -p ./docs/app/master/
              rm -rf ./docs/app/master/*
              cp -r ../Shoutz0r-app/docs/* ./docs/app/master/
            displayName: 'Add generated phpDoc to Shoutz0r Repo'

          - script: |
              mkdir -p ./storybook/app/master/
              rm -rf ./storybook/app/master/*
              cp -r ../Shoutz0r-app/storybook-static/* ./storybook/app/master/
            displayName: 'Add generated Storybook to Shoutz0r Repo'

          - script: |
              git add .
              git commit --author "Azure Devops Pipeline <azure-devops@example.com>" -m "Updated Shoutz0r-app phpDocs"
              git push
            displayName: 'Upload changes to Shoutz0r Repo'
